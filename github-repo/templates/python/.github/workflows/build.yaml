---
name: Build
on:
  push:
    branches: [main]

jobs:
  Anti-Virus-Scan:
    runs-on: ubuntu-latest
    name: Anti Virus Scan
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - id: anti-virus-scan
        name: Git AV Scan
        uses: djdefi/gitavscan@main
        with:
          options: '--max-filesize=1M'

  Docker-Build:
    needs: Lint
    name: Tagged Docker Release to Google Artifact Registry
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GOOGLE_OAUTH_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SA }}
          access_token_lifetime: 300s
      
      - id: login-to-artifact
        name: Login to GCP Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.GCP_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - id: repo-basename
        name: Extract Repo Basename
        run: echo "IMAGE=$(basename ${{ github.repository }})" >> "$GITHUB_ENV"

      - id: docker-build-push
        name: Build Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ vars.GCP_ARTIFACT}}/${{ env.IMAGE }}:latest